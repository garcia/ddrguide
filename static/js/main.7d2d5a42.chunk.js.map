{"version":3,"sources":["utils/make-anchor.tsx","components/GuideMarkdown/GuideMarkdown.tsx","components/Page404/Page404.tsx","components/SectionOutliner/SectionOutliner.tsx","components/Article/Article.tsx","components/Home/Home.tsx","components/Glossary/Term/Term.tsx","components/Glossary/TermGroup/TermGroup.tsx","components/HashRedirect/HashRedirect.js","components/Glossary/SearchBar/SearchBar.tsx","components/Glossary/SortSelect/SortSelect.tsx","components/Glossary/Glossary.tsx","components/App/ScrollToTop.tsx","components/Songs/Songs.tsx","components/Contributors/Contributors.tsx","components/App/App.tsx","serviceWorker.js","index.js","components/Glossary/SearchBar/Autosuggest.module.scss"],"names":["makeAnchor","s","toLowerCase","replace","ReactMarkdownMoized","moize","react","ReactMarkdown","siteSections","MakeSiteLink","id","GuideMarkdown","props","markdown","sourceToMarkdown","source","output","index","length","nextLink","indexOf","push","slice","linkEnd","console","error","linkData","sectionDivider","linkSection","hasOwnProperty","this","section","linkDivider","linkDisplay","linkTerm","anchor","startsWith","substr","lastIndexOf","log","join","href","match","children","to","slug","React","Children","toArray","reduce","flatten","text","child","createElement","level","renderers","link","routerLinkRenderer","heading","headingRenderer","Component","Page404","className","SectionOutliner","ArticleStore","allArticles","navigatingTheDDRUI","whyPlayDDR","basicGameplay","settingYourSpeed","decidingWhatToPlay","articleSlugs","undefined","instance","AssertionError","forEach","article","data","AllArticleSummariesPage","AllArticleSummaries","getInstance","map","a","key","ArticleSummary","coming_soon","src","alt","title","description","Article","contentMarkdown","content","property","style","backgroundImage","sections","Home","Term","aka","trivia","image","term","definition","acronym","filename","target","rel","altText","TermGroup","groupName","hashFragment","observer","asyncTimerId","scrollFunction","reset","disconnect","window","clearTimeout","getElAndScroll","element","document","getElementById","genericHashLink","As","scroll","smooth","filteredProps","ref","e","onClick","split","hash","el","scrollIntoView","behavior","setTimeout","MutationObserver","observe","attributes","childList","subtree","HashRedirect","Link","PropTypes","func","node","oneOfType","string","object","Suggestion","displayText","matchedTerm","termProps","boldRegion","boldL","boldR","input","glossaryStore","GlossaryStore","suggestions","suggested","allTerms","SearchBar","state","value","redirect","onSuggestionsFetchRequested","bind","onSuggestionsClearRequested","onSuggestionSelected","onChange","setState","getSuggestions","event","suggestionValue","params","newValue","inputProps","placeholder","getSuggestionValue","renderSuggestion","theme","Autosuggest_theme","SortSelect","handleChange","sort","onSortUpdate","termLookup","sourceIndex","glossaryJson","entry","GlossarySort","compare","b","localeCompare","sectionName","firstChar","charAt","toUpperCase","concept","Glossary","store","sortedTerms","sortTerms","terms","groupedTerms","groupTerms","groups","currentSectionName","currentGroup","Object","keys","group","t","ScrollToTop","withRouter","prevProps","location","pathname","scrollTo","SongGroups","Contributors","Sidebar","exact","activeClassName","Footer","history","createBrowserHistory","basename","process","App","Helmet","defaultTitle","titleTemplate","charSet","path","component","render","Boolean","hostname","rootElement","hasChildNodes","hydrate","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7d2d5a42.chunk.js","sourcesContent":["export function makeAnchor(s: string): string {\r\n    return (s.toLowerCase()\r\n        .replace(/ /g, \"-\")\r\n        .replace(/&/g, \"and\")\r\n        .replace(/'/g, \"\")\r\n    );\r\n}","import React from 'react';\r\nimport ReactMarkdown, { ReactMarkdownProps } from 'react-markdown';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport moize from 'moize';\r\n\r\nimport { makeAnchor } from '../../utils/make-anchor';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Memoize markdown - needs some ugly type juggling to work around moize not supporting ES5-style classes\r\nconst ReactMarkdownMoized = moize.react(ReactMarkdown as any as (props: ReactMarkdownProps) => React.ReactElement);\r\n\r\nconst siteSections = {\"glossary\": null, \"article\": null, \"song\": null};\r\nexport type SiteSection = keyof typeof siteSections;\r\n\r\nconst MakeSiteLink: {[key in SiteSection]: ((id: string) => string)} = {\r\n    \"glossary\": (id) => \"/glossary/#term-\" + makeAnchor(id),\r\n    \"article\": (id) => \"/article/\" + makeAnchor(id),\r\n    \"song\": (id) => \"/song/\" + makeAnchor(id)\r\n};\r\n\r\nexport interface GuideMarkdownProps {\r\n    source: string;\r\n    section: SiteSection;\r\n}\r\n\r\nexport class GuideMarkdown extends React.Component<GuideMarkdownProps> {\r\n    markdown: string;\r\n\r\n    constructor(props: GuideMarkdownProps) {\r\n        super(props);\r\n        this.markdown = this.sourceToMarkdown(props.source);\r\n    }    \r\n\r\n    sourceToMarkdown(s: string): string {\r\n        let output: string[] = [];\r\n        let index: number = 0;\r\n\r\n        while (index < s.length) {\r\n            \r\n            // Find next link marker\r\n            let nextLink = s.indexOf(\"[\", index);\r\n\r\n            if (nextLink >= 0) {\r\n                \r\n                // Push text fragment, then parse the link\r\n                output.push(s.slice(index, nextLink));\r\n\r\n                // Find next closing bracket\r\n                let linkEnd: number = s.indexOf(\"]\", nextLink);\r\n                if (linkEnd < 0) {\r\n                    console.error(\"Missing closing bracket for link at index \" + index + \" in string: \" + s);\r\n                    break;\r\n                }\r\n\r\n                let linkData: string = s.slice(nextLink+1, linkEnd);\r\n                \r\n                // Check for dividing \":\" - if present, the left part is the site section\r\n                let sectionDivider: number = linkData.indexOf(\":\");\r\n                let linkSection: string;\r\n                if (sectionDivider >= 0) {\r\n                    linkSection = linkData.slice(0, sectionDivider);\r\n                    if (siteSections.hasOwnProperty(linkSection)) {\r\n                        linkData = linkData.slice(sectionDivider+1);\r\n                    } else {\r\n                        linkSection = this.props.section;\r\n                    }\r\n                } else {\r\n                    linkSection = this.props.section;\r\n                }\r\n                \r\n                // Check for dividing \"|\" - if present, the left part is the text to display and the right part is the term to link\r\n                let linkDivider: number = linkData.indexOf(\"|\");\r\n                let linkDisplay: string;\r\n                let linkTerm: string;\r\n                if (linkDivider >= 0) {\r\n                    linkDisplay = linkData.slice(0, linkDivider);\r\n                    linkTerm = linkData.slice(linkDivider+1);\r\n                } else {\r\n                    linkDisplay = linkTerm = linkData;\r\n                }\r\n\r\n                let anchor: string;\r\n                if (linkTerm.startsWith(\"http\") || linkTerm.startsWith(\"/\")) {\r\n                    anchor = linkTerm.replace(/ /g, \"%20\");\r\n                } else {\r\n                    anchor = MakeSiteLink[linkSection as SiteSection](linkTerm);\r\n                    // Hacky fix for glossary hash links\r\n                    if (linkSection === \"glossary\" && this.props.section === \"glossary\") {\r\n                        anchor = anchor.substr(anchor.lastIndexOf(\"/\")+1);\r\n                    }\r\n                }\r\n\r\n                // Push the resulting link\r\n                output.push(\"[\" + linkDisplay + \"](\" + anchor + \")\");\r\n                index = linkEnd + 1;\r\n\r\n            } else {\r\n\r\n                // No more newlines or links to parse - push remaining text\r\n                output.push(s.slice(index));\r\n                index = s.length;\r\n\r\n            }\r\n        }\r\n        console.log(output.join(\"\"));\r\n\r\n        return output.join(\"\");\r\n    }\r\n\r\n    routerLinkRenderer(props: {href: string, children: JSX.Element}): JSX.Element {\r\n        if (props.href.match(/^(https?:)?\\/\\//)) {\r\n            return <a href={props.href}>{props.children}</a>;\r\n        } else if (props.href.indexOf('#') >= 0) {\r\n            return <HashLink to={props.href}>{props.children}</HashLink>;\r\n        } else {\r\n            return <Link to={props.href}>{props.children}</Link>;\r\n        }\r\n    }\r\n\r\n    headingRenderer(props: {level: number, children: JSX.Element}): JSX.Element {\r\n        function flatten(text: string, child: string | JSX.Element): string {\r\n            return typeof child === 'string'\r\n              ? text + child\r\n              : React.Children.toArray(child.props.children).reduce(flatten, text);\r\n        }\r\n\r\n        var children = React.Children.toArray(props.children);\r\n        var text = children.reduce(flatten, '');\r\n        var slug = 'section-' + makeAnchor(text);\r\n        return React.createElement('h' + props.level, {id: slug}, props.children);\r\n    }\r\n\r\n    render() {\r\n        return <ReactMarkdownMoized\r\n                source={this.markdown}\r\n                renderers={{link: this.routerLinkRenderer, heading: this.headingRenderer}}\r\n            />;\r\n    }\r\n}","import Helmet from \"react-helmet\";\r\nimport React from \"react\";\r\n\r\nexport function Page404() {\r\n    return (\r\n        <main className=\"column\">\r\n            <Helmet>\r\n                <title>404</title>\r\n            </Helmet>\r\n            <div className=\"contentHeader\">\r\n                <h1>404</h1>\r\n                <p>There's nothing at this address. Sorry! Let us know <a href=\"https://twitter.com/DDRGuide\">@DDRGuide</a> if you think this is a mistake.</p>\r\n            </div>\r\n        </main>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport class SectionOutliner extends React.Component {\r\n    render() {\r\n        return (\r\n            <aside className=\"column outline\">\r\n                <h4>Sections</h4>\r\n                <ul>\r\n                    {this.props.children}\r\n                </ul>\r\n            </aside>\r\n        );\r\n    }\r\n}","import { AssertionError } from 'assert';\r\nimport React from 'react';\r\n\r\nimport { GuideMarkdown } from '../GuideMarkdown';\r\nimport './Article.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { makeAnchor } from '../../utils/make-anchor';\r\nimport { Page404 } from '../Page404';\r\nimport { SectionOutliner } from '../SectionOutliner';\r\n\r\nimport navigatingTheDDRUI from '../../content/articles/navigating-the-ddr-ui.json';\r\nimport settingYourSpeed from '../../content/articles/setting-your-speed.json';\r\nimport whyPlayDDR from  '../../content/articles/why-play-ddr.json';\r\nimport basicGameplay from  '../../content/articles/basic-gameplay.json';\r\nimport decidingWhatToPlay from  '../../content/articles/deciding-what-to-play.json';\r\nimport Helmet from 'react-helmet';\r\n\r\nexport interface ArticleProps {\r\n    slug: string;\r\n}\r\n\r\nexport interface ArticleContent {\r\n    data: {\r\n        title: string;\r\n        slug: string;\r\n        description: string;\r\n        sections: string[];\r\n        coming_soon?: boolean;\r\n    }\r\n    content: string;\r\n}\r\n\r\nexport class ArticleStore {\r\n    \r\n    static instance?: ArticleStore;\r\n\r\n    allArticles: ArticleContent[] = [navigatingTheDDRUI, whyPlayDDR, basicGameplay, settingYourSpeed, decidingWhatToPlay];\r\n    articleSlugs: {[key: string]: ArticleContent} = {};\r\n\r\n    constructor() {\r\n        if (ArticleStore.instance !== undefined) {\r\n            throw new AssertionError();\r\n        }\r\n        this.allArticles.forEach(article => {\r\n            this.articleSlugs[article.data.slug] = article;\r\n        });\r\n    }\r\n\r\n    static getInstance(): ArticleStore {\r\n        if (ArticleStore.instance === undefined) {\r\n            ArticleStore.instance = new ArticleStore();\r\n        }\r\n        return ArticleStore.instance;\r\n    }\r\n}\r\n\r\nexport class AllArticleSummariesPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"column articles\">\r\n                <div className=\"contentHeader\">\r\n                    <h1>Articles</h1>\r\n                </div>\r\n                <AllArticleSummaries />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport class AllArticleSummaries extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"contentSummaryList\">\r\n                {ArticleStore.getInstance().allArticles.map(a => <ArticleSummary key={a.data.slug} {...a} />)}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ArticleSummary extends React.Component<ArticleContent> {\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"contentSummary\">\r\n                <Link to={\"/article/\" + this.props.data.slug} className={this.props.data.coming_soon ? \"coming-soon\" : \"\"}>\r\n                    <img className=\"contentSummaryThumbnail\" src={\"/images/Article - Thumbnail - \" + this.props.data.slug + \".jpg\"} alt=\"\" />\r\n                    <div className=\"contentSummaryText\">\r\n                        <h3>{this.props.data.title}</h3>\r\n                        <p>{this.props.data.description}</p>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport class Article extends React.Component<ArticleProps> {\r\n    \r\n    article: ArticleContent | undefined;\r\n    contentMarkdown: JSX.Element | undefined;\r\n\r\n    constructor(props: ArticleProps) {\r\n        super(props);\r\n        this.article = ArticleStore.getInstance().articleSlugs[props.slug];\r\n\r\n        if (this.article) {\r\n            this.contentMarkdown = <GuideMarkdown source={this.article.content} section=\"article\" />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let output: JSX.Element;\r\n\r\n        if (this.article) {\r\n            output = (\r\n                <>\r\n                    <Helmet>\r\n                        <title>{this.article.data.title}</title>\r\n                        <meta property=\"og:type\" content=\"article\" />\r\n                        <meta property=\"og:title\" content={this.article.data.title + \" | DDRGuide\"} />\r\n                        <meta property=\"og:description\" content={this.article.data.description} />\r\n                    </Helmet>\r\n                    <main className=\"column article\">\r\n                        <article>\r\n                            <div className=\"contentHeader\" style={{backgroundImage: \"url('/images/Article - Header - \" + this.article.data.slug + \".jpg')\"}}>\r\n                                <h1>{this.article.data.title}</h1>\r\n                                <p>{this.article.data.description}</p>\r\n                            </div>\r\n                            <div className=\"contents\">\r\n                                {this.contentMarkdown}\r\n                            </div>\r\n                        </article>\r\n                    </main>\r\n                    <SectionOutliner>\r\n                        {this.article.data.sections.map(s => <li key={makeAnchor(s)}><HashLink to={\"#section-\" + makeAnchor(s)}>{s}</HashLink></li>)}\r\n                    </SectionOutliner>\r\n                </>\r\n            );\r\n        } else {\r\n            output = <Page404 />\r\n        }\r\n\r\n        return output;\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Home.scss';\r\nimport { AllArticleSummaries } from '../Article';\r\n\r\nexport class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <main className=\"column home\">\r\n                <div className=\"homeHeader\">\r\n                    <div className=\"homeLogo\">\r\n                        <img src=\"/images/ddrguide.svg\" alt=\"DDRGuide Logo\" />\r\n                        <h1>DDRGuide</h1>\r\n                    </div>\r\n                    <p>Learn where, why, and how to play DanceDanceRevolution A and A20. Advice written &amp; vetted by experienced players, comprehensive resources of in-depth game knowledge for newcomers and experts alike, and more.</p>\r\n                </div>\r\n                <ul className=\"homeSections\">\r\n                    <li>\r\n                        <h2>Articles</h2>\r\n                        <AllArticleSummaries />\r\n                    </li>\r\n                    <li>\r\n                        <h2>Resources</h2>\r\n                        <ul className=\"contentSummaryList\">\r\n                            <li className=\"contentSummary\">\r\n                                <Link to=\"/glossary/\">\r\n                                    <img className=\"contentSummaryThumbnail\" src=\"/images/irasutoya - friend_advice_woman.png\" alt=\"\" />\r\n                                    <div className=\"contentSummaryText\">\r\n                                        <h3>Glossary</h3>\r\n                                        <p>A comprehensive glossary of modern DDR terminology & slang.</p>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </main>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport moize from 'moize';\r\n\r\nimport { GuideMarkdown } from '../../GuideMarkdown';\r\nimport { makeAnchor } from '../../../utils/make-anchor';\r\nimport './Term.scss';\r\n\r\nexport interface TermProps {\r\n    term: string;\r\n    acronym?: string;\r\n    aka?: string[];\r\n    definition: string;\r\n    trivia?: string;\r\n    help?: string;\r\n    concept: string;\r\n    image?: {\r\n        filename: string;\r\n        altText: string;\r\n    };\r\n    sourceIndex: number;\r\n}\r\n\r\nexport const Term: React.FunctionComponent<TermProps> = moize.react(props => {\r\n    let anchor: string = \"term-\" + makeAnchor(props.term);\r\n    let title: JSX.Element;\r\n    let aka: JSX.Element | undefined;\r\n    let definition: JSX.Element = <div className=\"definition\"><GuideMarkdown source={props.definition} section=\"glossary\" /></div>;\r\n    let trivia: JSX.Element | undefined;\r\n    let image: JSX.Element | undefined;\r\n\r\n    if (props.acronym !== undefined) {\r\n        title = <h3>{props.term} ({props.acronym})</h3>\r\n    } else {\r\n        title = <h3>{props.term}</h3>\r\n    }\r\n\r\n    if (props.aka !== undefined) {\r\n        aka = <div className=\"aka\"><p>Also known as: {props.aka.join(\", \")}</p></div>;\r\n    }\r\n\r\n    if (props.trivia !== undefined) {\r\n        trivia = (\r\n            <blockquote className=\"trivia\">\r\n                <h4>Trivia</h4>\r\n                <GuideMarkdown source={props.trivia} section=\"glossary\" />\r\n            </blockquote>\r\n        );\r\n    }\r\n\r\n    if (props.image !== undefined) {\r\n        let src: string = \"/images/\" + props.image.filename;\r\n        image = (\r\n            <a className=\"termImage\" target=\"_blank\" rel=\"noopener noreferrer\" href={src}>\r\n                <img src={src} alt={props.image.altText} title={props.image.altText} />\r\n                <span>Click to open in new tab</span>\r\n            </a>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <div id={anchor} className=\"Term\">\r\n            <div className=\"termTitle\">\r\n                {title}\r\n                {aka}\r\n            </div>\r\n            <div className=\"termDefinitionAndImage\">\r\n                {definition}\r\n                {image}\r\n            </div>\r\n            {trivia}\r\n        </div>\r\n    );\r\n});","import React from 'react';\r\nimport moize from 'moize';\r\n\r\nimport './TermGroup.scss';\r\nimport { makeAnchor } from '../../../utils/make-anchor';\r\n\r\nexport const TermGroup: React.FunctionComponent<{groupName: string}> = moize.react(props =>\r\n    <div id={\"group-\" + makeAnchor(props.groupName)} className=\"termGroup\">\r\n        <h2>{props.groupName}</h2>\r\n        {props.children}\r\n    </div>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nlet hashFragment = '';\r\nlet observer = null;\r\nlet asyncTimerId = null;\r\nlet scrollFunction = null;\r\n\r\nfunction reset() {\r\n  hashFragment = '';\r\n  if (observer !== null) observer.disconnect();\r\n  if (asyncTimerId !== null) {\r\n    window.clearTimeout(asyncTimerId);\r\n    asyncTimerId = null;\r\n  }\r\n}\r\n\r\nfunction getElAndScroll() {\r\n  const element = document.getElementById(hashFragment);\r\n  if (element !== null) {\r\n    scrollFunction(element);\r\n    reset();\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction hashLinkScroll() {\r\n  // Push onto callback queue so it runs after the DOM is updated\r\n  window.setTimeout(() => {\r\n    if (getElAndScroll() === false) {\r\n      if (observer === null) {\r\n        observer = new MutationObserver(getElAndScroll);\r\n      }\r\n      observer.observe(document, {\r\n        attributes: true,\r\n        childList: true,\r\n        subtree: true,\r\n      });\r\n      // if the element doesn't show up in 10 seconds, stop checking\r\n      asyncTimerId = window.setTimeout(() => {\r\n        reset();\r\n      }, 10000);\r\n    }\r\n  }, 0);\r\n}\r\n\r\nexport function genericHashLink(props, As) {\r\n  function handleClick(e) {\r\n    reset();\r\n    if (props.onClick) props.onClick(e);\r\n    if (typeof props.to === 'string') {\r\n      hashFragment = props.to\r\n        .split('#')\r\n        .slice(1)\r\n        .join('#');\r\n    } else if (\r\n      typeof props.to === 'object' &&\r\n      typeof props.to.hash === 'string'\r\n    ) {\r\n      hashFragment = props.to.hash.replace('#', '');\r\n    }\r\n    if (hashFragment !== '') {\r\n      scrollFunction =\r\n        props.scroll ||\r\n        (el =>\r\n          props.smooth\r\n            ? el.scrollIntoView({ behavior: \"smooth\" })\r\n            : el.scrollIntoView());\r\n      hashLinkScroll();\r\n    }\r\n  }\r\n  const { scroll, smooth, ...filteredProps } = props;\r\n  return (\r\n    <As {...filteredProps} ref={handleClick}>\r\n      {props.children}\r\n    </As>\r\n  );\r\n}\r\n\r\nexport function HashRedirect(props) {\r\n  return genericHashLink(props, Link);\r\n}\r\n\r\nexport function NavHashRedirect(props) {\r\n  return genericHashLink(props, NavLink);\r\n}\r\n\r\nconst propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  scroll: PropTypes.func,\r\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nHashRedirect.propTypes = propTypes;\r\nNavHashRedirect.propTypes = propTypes;","import React, { ChangeEvent } from 'react';\r\nimport Autosuggest, { SuggestionsFetchRequestedParams, SuggestionSelectedEventData } from 'react-autosuggest';\r\nimport { TermProps } from '../Term';\r\nimport { GlossaryStore } from '../Glossary';\r\nimport Autosuggest_theme from './Autosuggest.module.scss';\r\nimport { makeAnchor } from '../../../utils/make-anchor';\r\nimport { HashRedirect } from '../../HashRedirect/HashRedirect';\r\n\r\ninterface SearchBarProps {\r\n}\r\n\r\ninterface SearchBarState {\r\n    value: string;\r\n    suggestions: SuggestionProps[];\r\n    redirect: JSX.Element | undefined;\r\n}\r\n\r\ninterface SuggestionProps {\r\n    termProps: TermProps;\r\n    matchedTerm: string;\r\n    boldRegion: [number, number];\r\n}\r\n\r\nclass Suggestion extends React.Component<SuggestionProps> {\r\n\r\n    static getSuggestions(input: string): SuggestionProps[] {\r\n        const glossaryStore: GlossaryStore = GlossaryStore.getInstance();\r\n\r\n        if (input.length === 0) {\r\n            return [];\r\n        }\r\n        input = input.toLowerCase();\r\n\r\n        let suggestions: SuggestionProps[] = [];\r\n        let suggested: {[key: string]: boolean | undefined} = {};\r\n        \r\n        for (let termProps of glossaryStore.allTerms) {\r\n            if (suggested[termProps.term] === undefined && termProps.term.toLowerCase().startsWith(input)) {\r\n                suggestions.push({\r\n                    termProps: termProps,\r\n                    matchedTerm: termProps.term,\r\n                    boldRegion: [0, input.length]\r\n                });\r\n                suggested[termProps.term] = true;\r\n            }\r\n        }\r\n\r\n        for (let termProps of glossaryStore.allTerms) {\r\n            if (suggested[termProps.term] === undefined && termProps.acronym !== undefined) {\r\n                if (termProps.acronym.toLowerCase().startsWith(input)) {\r\n                    suggestions.push({\r\n                        termProps: termProps,\r\n                        matchedTerm: termProps.acronym,\r\n                        boldRegion: [0, input.length]\r\n                    });\r\n                    suggested[termProps.term] = true;\r\n                }\r\n            }\r\n            if (suggested[termProps.term] === undefined && termProps.aka !== undefined) {\r\n                for (let aka of termProps.aka) {\r\n                    if (aka.toLowerCase().startsWith(input)) {\r\n                        suggestions.push({\r\n                            termProps: termProps,\r\n                            matchedTerm: aka,\r\n                            boldRegion: [0, input.length]\r\n                        });\r\n                        suggested[termProps.term] = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return suggestions;\r\n    }\r\n\r\n    render() {\r\n        let displayText: string;\r\n        if (this.props.matchedTerm === this.props.termProps.term) {\r\n            displayText = this.props.matchedTerm;\r\n        } else {\r\n            displayText = this.props.matchedTerm + ' (' + this.props.termProps.term + ')';\r\n        }\r\n        var [boldL, boldR] = this.props.boldRegion;\r\n        return (\r\n            <>\r\n                {displayText.slice(0, boldL)}\r\n                <b>{displayText.slice(boldL, boldR)}</b>\r\n                {displayText.slice(boldR)}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport class SearchBar extends React.Component<SearchBarProps> {\r\n    \r\n    glossaryStore: GlossaryStore = GlossaryStore.getInstance();\r\n    state: SearchBarState;\r\n    \r\n    constructor(props: SearchBarProps) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            redirect: undefined,\r\n        };\r\n\r\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\r\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\r\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onSuggestionsFetchRequested(value: SuggestionsFetchRequestedParams): void {\r\n        this.setState({\r\n            suggestions: Suggestion.getSuggestions(value.value)\r\n        });\r\n    }\r\n\r\n    onSuggestionsClearRequested(): void {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    }\r\n\r\n    onSuggestionSelected(event: React.FormEvent<any>, data: SuggestionSelectedEventData<SuggestionProps>): void {\r\n        let redirect: JSX.Element = <HashRedirect to={\"#term-\" + makeAnchor(data.suggestionValue)}></HashRedirect>;\r\n        this.setState({\r\n            redirect: redirect\r\n        });\r\n    }\r\n    \r\n    onChange(event: ChangeEvent<HTMLInputElement>, params: Autosuggest.ChangeEvent): void {\r\n        this.setState({\r\n            value: params.newValue\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const inputProps = {\r\n            placeholder: 'Search',\r\n            value: this.state.value,\r\n            onChange: this.onChange\r\n        };\r\n\r\n        return (\r\n            <>\r\n            <Autosuggest\r\n                suggestions={this.state.suggestions}\r\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                onSuggestionSelected={this.onSuggestionSelected}\r\n                getSuggestionValue={(props) => props.termProps.term}\r\n                renderSuggestion={(props) => <Suggestion {...props} />}\r\n                inputProps={inputProps}\r\n                theme={Autosuggest_theme}\r\n            />\r\n            {this.state.redirect}\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './SortSelect.scss';\r\n\r\nexport type SortValue = \"by-concept\" | \"alphabetical\";\r\n\r\ninterface SortState {\r\n    value: SortValue;\r\n}\r\n\r\ninterface SortProps {\r\n    onSortUpdate: (sort: SortValue) => void;\r\n}\r\n\r\nexport class SortSelect extends React.Component<SortProps, SortState> {\r\n    state: SortState;\r\n\r\n    constructor(props: SortProps) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"by-concept\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        let sort = event.target.value as SortValue;\r\n        this.setState({\r\n            value: sort\r\n        });\r\n        this.props.onSortUpdate(sort);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <select className=\"sortSelect\" value={this.state.value} onChange={this.handleChange}>\r\n                <option value=\"by-concept\">Sort by concept</option>\r\n                <option value=\"alphabetical\">Sort A-Z</option>\r\n            </select>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { AssertionError } from 'assert';\r\n\r\nimport { Term, TermProps } from './Term';\r\nimport { TermGroup } from './TermGroup';\r\nimport { SearchBar } from './SearchBar';\r\nimport { SortSelect, SortValue } from './SortSelect';\r\nimport glossaryJson from '../../content/resources/glossary.json';\r\nimport './Glossary.scss';\r\nimport { makeAnchor } from '../../utils/make-anchor';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { SectionOutliner } from '../SectionOutliner';\r\n\r\ninterface GlossaryProps {\r\n\r\n}\r\n\r\ninterface GlossaryState {\r\n    sort: SortValue;\r\n    terms: TermProps[];\r\n    groupedTerms: {[key: string]: TermProps[]};\r\n}\r\n\r\nexport class GlossaryStore {\r\n    \r\n    static instance?: GlossaryStore;\r\n\r\n    allTerms: TermProps[] = [];\r\n    termLookup: {[key: string]: TermProps} = {};\r\n\r\n    constructor() {\r\n        if (GlossaryStore.instance !== undefined) {\r\n            throw new AssertionError();\r\n        }\r\n        let sourceIndex: number = 0;\r\n        glossaryJson.forEach(entry => {\r\n            let props: TermProps = {sourceIndex, ...entry};\r\n            this.termLookup[entry.term] = props;\r\n            this.allTerms.push(props);\r\n            sourceIndex++;\r\n        });\r\n    }\r\n\r\n    static getInstance(): GlossaryStore {\r\n        if (GlossaryStore.instance === undefined) {\r\n            GlossaryStore.instance = new GlossaryStore();\r\n        }\r\n        return GlossaryStore.instance;\r\n    }\r\n}\r\n\r\nconst GlossarySort: {[key in SortValue]: {compare: (a: TermProps, b: TermProps) => number, sectionName: (t: TermProps) => string } } = {\r\n    \"alphabetical\": {\r\n        compare: (a, b) => a.term.localeCompare(b.term),\r\n        sectionName: (a) => {\r\n            let firstChar: string = a.term.charAt(0);\r\n            if (firstChar.match(/[a-z]/i)) {\r\n                return firstChar.toUpperCase();\r\n            } else if (firstChar.match(/[0-9]/)) {\r\n                return '#';\r\n            } else {\r\n                return 'Symbols';\r\n            }\r\n        },\r\n    },\r\n    \"by-concept\": {\r\n        compare: (a, b) => a.concept.localeCompare(b.concept) || (a.sourceIndex - b.sourceIndex),\r\n        sectionName: (a) => a.concept\r\n    }\r\n};\r\n\r\nexport class Glossary extends React.Component<GlossaryProps> {\r\n    store: GlossaryStore = GlossaryStore.getInstance();\r\n    state: GlossaryState;\r\n\r\n    constructor(props: GlossaryProps) {\r\n        super(props);\r\n        \r\n        let initialSort: SortValue = \"by-concept\";\r\n        let sortedTerms: TermProps[] = this.store.allTerms.slice();\r\n        this.sortTerms(sortedTerms, initialSort);\r\n        this.state = {\r\n            sort: initialSort,\r\n            terms: sortedTerms,\r\n            groupedTerms: this.groupTerms(initialSort, sortedTerms)\r\n        };\r\n        \r\n        this.onSortUpdate = this.onSortUpdate.bind(this);\r\n    }\r\n\r\n    onSortUpdate(sort: SortValue) {\r\n        this.setState((state: GlossaryState, props: GlossaryProps) => {\r\n            this.sortTerms(state.terms, sort);\r\n            return {\r\n                sort: sort,\r\n                terms: state.terms,\r\n                groupedTerms: this.groupTerms(sort, state.terms)\r\n            };\r\n        });\r\n    }\r\n\r\n    sortTerms(terms: TermProps[], sort: SortValue): void {\r\n        terms.sort(GlossarySort[sort].compare);\r\n    }\r\n\r\n    groupTerms(sort: SortValue, sortedTerms: TermProps[]): { [key: string]: TermProps[]; } {\r\n        let groups: { [key: string]: TermProps[]; } = {};\r\n        let currentSectionName: string = GlossarySort[sort].sectionName(sortedTerms[0]);\r\n        let currentGroup: TermProps[] = [];\r\n        for (let term of sortedTerms) {\r\n            let sectionName: string = GlossarySort[sort].sectionName(term);\r\n            if (sectionName !== currentSectionName) {\r\n                groups[currentSectionName] = currentGroup;\r\n                currentGroup = [];\r\n                currentSectionName = sectionName;\r\n            }\r\n            currentGroup.push(term);\r\n        }\r\n        groups[currentSectionName] = currentGroup;\r\n        return groups;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <main className=\"column glossary\">\r\n                    <Helmet>\r\n                        <title>Glossary</title>\r\n                        <meta property=\"og:title\" content=\"Glossary | DDRGuide\" />\r\n                        <meta property=\"og:description\" content=\"A comprehensive glossary of modern DanceDanceRevolution terminology.\" />\r\n                    </Helmet>\r\n                    <div className=\"contentHeader\">\r\n                        <h1>Glossary</h1>\r\n                        <p>This is a comprehensive glossary of modern DanceDanceRevolution terminology and slang.</p>\r\n                    </div>\r\n                    <div className=\"sortAndFilter\">\r\n                        <h2>Options:</h2>\r\n                        <div><SortSelect onSortUpdate={this.onSortUpdate} /></div>\r\n                        <div><SearchBar /></div>\r\n                    </div>\r\n                    <div className=\"terms\">\r\n                        {Object.keys(this.state.groupedTerms).map(group =>\r\n                            <TermGroup key={group} groupName={group}>\r\n                                {this.state.groupedTerms[group].map(t => <Term key={t.term} {...t} />)}\r\n                            </TermGroup>\r\n                        )}\r\n                    </div>\r\n                </main>\r\n                <SectionOutliner>\r\n                    {Object.keys(this.state.groupedTerms).map(group => <li><HashLink to={\"#group-\" + makeAnchor(group)}>{group}</HashLink></li>)}\r\n                </SectionOutliner>\r\n            </>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\n\r\n// Scroll restoration based on https://reacttraining.com/react-router/web/guides/scroll-restoration.\r\nexport var ScrollToTop = withRouter(\r\n    class ScrollToTopWithoutRouter extends React.Component<RouteComponentProps<any>> {\r\n        componentDidUpdate(prevProps: Readonly<RouteComponentProps<any>>) {\r\n            if (this.props.location.pathname !== prevProps.location.pathname) {\r\n                window.scrollTo(0, 0);\r\n            }\r\n        }\r\n\r\n        render(): JSX.Element | null {\r\n            return null;\r\n        }\r\n    }\r\n);","import React from \"react\";\r\n\r\nexport class SongGroups extends React.Component {\r\n    render() {\r\n        return (\r\n            <main className=\"column\">\r\n                <div className=\"contentHeader\">\r\n                    <h1>Coming Soon</h1>\r\n                    <p>We're hard at work gathering data for the song list! Check back soon.</p>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport './Contributors.scss';\r\n\r\nexport class Contributors extends React.Component {\r\n    render() {\r\n        return (\r\n            <main className=\"column\">\r\n                <Helmet>\r\n                    <title>Contributors</title>\r\n                    <meta property=\"og:title\" content=\"Contributors | DDRGuide\" />\r\n                    <meta property=\"og:description\" content=\"A comprehensive glossary of modern DanceDanceRevolution terminology.\" />\r\n                </Helmet>\r\n                <div className=\"contentHeader\">\r\n                    <h1>Contributors</h1>\r\n                    <p>The players behind DDRGuide!</p>\r\n                </div>\r\n                <ul className=\"contributorSections\">\r\n                    <li className=\"contributorSection\">\r\n                        <div className=\"contributorSectionHeader\">\r\n                            <h2>DDRGuide Staff</h2>\r\n                            <img src=\"/images/ddrguide.svg\" alt=\"DDRGuide Logo\" />\r\n                        </div>\r\n                        <div className=\"contributorSectionContent\">\r\n                            <p>DDRGuide.com was founded and coded by <a href=\"https://garcia.sh/\">Ash Garcia</a>, a software developer &amp; dance game player from Arizona.</p>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"contributorSection\">\r\n                        <div className=\"contributorSectionHeader\">\r\n                            <h2>Beta Testers</h2>\r\n                            <p>These players provided valuable feedback on the site's content prior to release.</p>\r\n                        </div>\r\n                        <ul className=\"contributorSectionContent\">\r\n                            <li>Max (<a href=\"https://twitter.com/eranostaImix\">@eranostaImix</a>)</li>\r\n                            <li>Dimo (<a href=\"https://twitter.com/bromid\">@bromid</a>)</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"contributorSection\">\r\n                        <div className=\"contributorSectionHeader\">\r\n                            <h2>Photographers</h2>\r\n                            <p>Talented photographers from the community graciously supplied their tournament photos for use across the site.</p>\r\n                        </div>\r\n                        <ul className=\"contributorSectionContent\">\r\n                            <li>Steve (<a href=\"https://twitter.com/StevesUsername\">@StevesUsername</a>)</li>\r\n                            <li>David (<a href=\"https://www.instagram.com/mutesauce/\">@mutesauce</a>)</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"contributorSection\">\r\n                        <div className=\"contributorSectionHeader\">\r\n                            <h2>The Rest</h2>\r\n                        </div>\r\n                        <ul className=\"contributorSectionContent\">\r\n                            <li>Massive thanks to all <a href=\"https://remywiki.com/\">RemyWiki</a> contributors for their hard work documenting every DDR mix in incredible detail.</li>\r\n                            <li>Thanks to the entire DDR community for their support and enthusiasm for this project.</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </main>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Router, Route, NavLink, Link, Switch } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport './App.scss';\r\nimport { Home } from '../Home';\r\nimport { Glossary } from '../Glossary';\r\nimport { ScrollToTop } from './ScrollToTop';\r\nimport { Article } from '../Article';\r\nimport { AllArticleSummariesPage } from '../Article';\r\nimport { Page404 } from '../Page404';\r\nimport { SongGroups } from '../Songs';\r\nimport { Contributors } from '../Contributors';\r\n  \r\nfunction Sidebar() {\r\n    return (\r\n        <nav className=\"column\">\r\n            <NavLink to=\"/\" exact={true} activeClassName=\"current\" className=\"homeLink\">\r\n                <img src=\"/images/ddrguide.svg\" alt=\"DDRGuide Logo\" />\r\n                <span>DDRGuide</span>\r\n            </NavLink>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to=\"/article/\" activeClassName=\"current\">Articles</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/glossary/\" activeClassName=\"current\">Glossary</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <ul className=\"footerSections\">\r\n                <li>\r\n                    <h3>DDRGuide.com</h3>\r\n                    <ul className=\"footerLinks\">\r\n                        <li><Link to=\"/about/contributors/\">Contributors</Link></li>\r\n                        <li><a href=\"https://github.com/garcia/ddrguide\">Source</a></li>\r\n                        <li><a href=\"https://twitter.com/DDRGuide\">Twitter</a></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <h3>Friends</h3>\r\n                    <ul className=\"footerLinks\">\r\n                        <li><a href=\"http://ddrcommunity.com/\">DDRCommunity</a></li>\r\n                        <li><a href=\"https://twitter.com/sf_evolved\">SF Evolved</a></li>\r\n                        <li><a href=\"https://life4ddr.com/\">LIFE4</a></li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <h3>Mission</h3>\r\n                    <p>\r\n                        Our goal is to make general knowledge about DDR accessible to anyone and everyone interested.\r\n                        If you'd like to contribute, message us on Twitter <a href=\"https://twitter.com/DDRGuide\">@DDRGuide</a>.\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport const history = createBrowserHistory({\r\n    basename: process.env.PUBLIC_URL\r\n});\r\n\r\nexport function App() {\r\n    return (\r\n        <Router history={history}>\r\n            <Helmet defaultTitle=\"DDRGuide\" titleTemplate=\"%s | DDRGuide\">\r\n                <meta charSet=\"utf-8\" />\r\n                <meta property=\"og:type\" content=\"website\" />\r\n                <meta property=\"og:title\" content=\"DDRGuide\" />\r\n                <meta property=\"og:site_name\" content=\"DDRGuide\" />\r\n                <meta property=\"og:description\" content=\"Learn where, why, and how to play DanceDanceRevolution. Help for newcomers, advice for competitive play, and references for DDR terminology and songs.\" />\r\n                <link rel=\"canonical\" href=\"https://www.ddrguide.com/\" />\r\n            </Helmet>\r\n            <div className=\"App\">\r\n                <div className=\"top\">\r\n                    <Route path=\"/:any+\" component={Sidebar} />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Home} />\r\n                        <Route path=\"/glossary/\" component={Glossary} />\r\n                        <Route path=\"/article/\" exact component={AllArticleSummariesPage} />\r\n                        <Route path=\"/article/:slug\" render={({match}) => <Article key={match.params.slug} slug={match.params.slug} />} />\r\n                        <Route path=\"/songs/\" component={SongGroups} />\r\n                        <Route path=\"/song/\" component={SongGroups} />\r\n                        <Route path=\"/about/contributors/\" exact component={Contributors} />\r\n                        <Route component={Page404} />\r\n                    </Switch>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n            <ScrollToTop />\r\n        </Router>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { hydrate, render } from 'react-dom';\r\nimport './index.scss';\r\nimport { App } from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n} else {\r\n  render(<App />, rootElement);\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Autosuggest_container__2WVkL\",\"suggestionsList\":\"Autosuggest_suggestionsList__bW1ja\",\"suggestion\":\"Autosuggest_suggestion__3CtP0\",\"suggestionHighlighted\":\"Autosuggest_suggestionHighlighted__1UWFi\"};"],"sourceRoot":""}